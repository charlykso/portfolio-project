[
    {
        "label": "models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "models",
        "description": "models",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "storage",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "app_views",
        "importPath": "api.v1.views",
        "description": "api.v1.views",
        "isExtraImport": true,
        "detail": "api.v1.views",
        "documentation": {}
    },
    {
        "label": "environ",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "make_response",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "CORS",
        "importPath": "flask_cors",
        "description": "flask_cors",
        "isExtraImport": true,
        "detail": "flask_cors",
        "documentation": {}
    },
    {
        "label": "Swagger",
        "importPath": "flasgger",
        "description": "flasgger",
        "isExtraImport": true,
        "detail": "flasgger",
        "documentation": {}
    },
    {
        "label": "swag_from",
        "importPath": "flasgger.utils",
        "description": "flasgger.utils",
        "isExtraImport": true,
        "detail": "flasgger.utils",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "models.user",
        "description": "models.user",
        "isExtraImport": true,
        "detail": "models.user",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "models.base_model",
        "description": "models.base_model",
        "isExtraImport": true,
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Property",
        "importPath": "models.property",
        "description": "models.property",
        "isExtraImport": true,
        "detail": "models.property",
        "documentation": {}
    },
    {
        "label": "models.property_img",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "models.property_img",
        "description": "models.property_img",
        "detail": "models.property_img",
        "documentation": {}
    },
    {
        "label": "Property_img",
        "importPath": "models.property_img",
        "description": "models.property_img",
        "isExtraImport": true,
        "detail": "models.property_img",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "models.review",
        "description": "models.review",
        "isExtraImport": true,
        "detail": "models.review",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "models.address",
        "description": "models.address",
        "isExtraImport": true,
        "detail": "models.address",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "scoped_session",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.ext.declarative",
        "description": "sqlalchemy.ext.declarative",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.declarative",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "md5",
        "importPath": "hashlib",
        "description": "hashlib",
        "isExtraImport": true,
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "close_db",
        "kind": 2,
        "importPath": "api.v1.app",
        "description": "api.v1.app",
        "peekOfCode": "def close_db(error):\n    \"\"\" Close Storage \"\"\"\n    storage.close()\n@app.errorhandler(404)\ndef not_found(error):\n    \"\"\" 404 Error\n    ---\n    responses:\n      404:\n        description: a resource was not found",
        "detail": "api.v1.app",
        "documentation": {}
    },
    {
        "label": "not_found",
        "kind": 2,
        "importPath": "api.v1.app",
        "description": "api.v1.app",
        "peekOfCode": "def not_found(error):\n    \"\"\" 404 Error\n    ---\n    responses:\n      404:\n        description: a resource was not found\n    \"\"\"\n    return make_response(jsonify({'error': \"Not found\"}), 404)\napp.config['SWAGGER'] = {\n    'title': 'Authentified Restful API',",
        "detail": "api.v1.app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "api.v1.app",
        "description": "api.v1.app",
        "peekOfCode": "app = Flask(__name__)\napp.config['JSONIFY_PRETTYPRINT_REGULAR'] = True\napp.register_blueprint(app_views)\ncors = CORS(app, resources={r\"/api/v1/*\": {\"origins\": \"*\"}})\n@app.teardown_appcontext\ndef close_db(error):\n    \"\"\" Close Storage \"\"\"\n    storage.close()\n@app.errorhandler(404)\ndef not_found(error):",
        "detail": "api.v1.app",
        "documentation": {}
    },
    {
        "label": "app.config['JSONIFY_PRETTYPRINT_REGULAR']",
        "kind": 5,
        "importPath": "api.v1.app",
        "description": "api.v1.app",
        "peekOfCode": "app.config['JSONIFY_PRETTYPRINT_REGULAR'] = True\napp.register_blueprint(app_views)\ncors = CORS(app, resources={r\"/api/v1/*\": {\"origins\": \"*\"}})\n@app.teardown_appcontext\ndef close_db(error):\n    \"\"\" Close Storage \"\"\"\n    storage.close()\n@app.errorhandler(404)\ndef not_found(error):\n    \"\"\" 404 Error",
        "detail": "api.v1.app",
        "documentation": {}
    },
    {
        "label": "cors",
        "kind": 5,
        "importPath": "api.v1.app",
        "description": "api.v1.app",
        "peekOfCode": "cors = CORS(app, resources={r\"/api/v1/*\": {\"origins\": \"*\"}})\n@app.teardown_appcontext\ndef close_db(error):\n    \"\"\" Close Storage \"\"\"\n    storage.close()\n@app.errorhandler(404)\ndef not_found(error):\n    \"\"\" 404 Error\n    ---\n    responses:",
        "detail": "api.v1.app",
        "documentation": {}
    },
    {
        "label": "app.config['SWAGGER']",
        "kind": 5,
        "importPath": "api.v1.app",
        "description": "api.v1.app",
        "peekOfCode": "app.config['SWAGGER'] = {\n    'title': 'Authentified Restful API',\n    'uiversion': 3\n}\nSwagger(app)\nif __name__ == \"__main__\":\n    \"\"\" Main Function \"\"\"\n    host = environ.get('HBNB_API_HOST')\n    port = environ.get('HBNB_API_PORT')\n    if not host:",
        "detail": "api.v1.app",
        "documentation": {}
    },
    {
        "label": "DBStorage",
        "kind": 6,
        "importPath": "models.engine.db_storage",
        "description": "models.engine.db_storage",
        "peekOfCode": "class DBStorage:\n    \"\"\"interaacts with the MySQL database\"\"\"\n    __engine = None\n    __session = None\n    def __init__(self):\n        \"\"\"Instantiate a DBStorage object\"\"\"\n        HBNB_MYSQL_USER = getenv('HBNB_MYSQL_USER')\n        HBNB_MYSQL_PWD = getenv('HBNB_MYSQL_PWD')\n        HBNB_MYSQL_HOST = getenv('HBNB_MYSQL_HOST')\n        HBNB_MYSQL_DB = getenv('HBNB_MYSQL_DB')",
        "detail": "models.engine.db_storage",
        "documentation": {}
    },
    {
        "label": "classes",
        "kind": 5,
        "importPath": "models.engine.db_storage",
        "description": "models.engine.db_storage",
        "peekOfCode": "classes = {\"Property\": Property, \"Property_img\": Property_img,\n           \"Address\": Address, \"Review\": Review, \"User\": User}\nclass DBStorage:\n    \"\"\"interaacts with the MySQL database\"\"\"\n    __engine = None\n    __session = None\n    def __init__(self):\n        \"\"\"Instantiate a DBStorage object\"\"\"\n        HBNB_MYSQL_USER = getenv('HBNB_MYSQL_USER')\n        HBNB_MYSQL_PWD = getenv('HBNB_MYSQL_PWD')",
        "detail": "models.engine.db_storage",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "models.address",
        "description": "models.address",
        "peekOfCode": "class Address(BaseModel, Base):\n    \"\"\"Representation of Address \"\"\"\n    __tablename__ = 'addresses'\n    country = Column(String(128), nullable=False)\n    state = Column(String(128), nullable=False)\n    city = Column(String(128), nullable=False)\n    street = Column(String(128), nullable=False)\n    landmark = Column(String(128), nullable=False)\n    user_id = Column(String(60), ForeignKey('users.id'), nullable=False)\n    text = Column(String(1024), nullable=False)",
        "detail": "models.address",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "kind": 6,
        "importPath": "models.base_model",
        "description": "models.base_model",
        "peekOfCode": "class BaseModel:\n    \"\"\"The BaseModel class from which future classes will be derived\"\"\"\n    id = Column(String(60), primary_key=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    updated_at = Column(DateTime, default=datetime.utcnow)\n    def __init__(self, *args, **kwargs):\n        \"\"\"Initialization of the base model\"\"\"\n        if kwargs:\n            for key, value in kwargs.items():\n                if key != \"__class__\":",
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 5,
        "importPath": "models.base_model",
        "description": "models.base_model",
        "peekOfCode": "time = \"%Y-%m-%dT%H:%M:%S.%f\"\nBase = declarative_base()\nclass BaseModel:\n    \"\"\"The BaseModel class from which future classes will be derived\"\"\"\n    id = Column(String(60), primary_key=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    updated_at = Column(DateTime, default=datetime.utcnow)\n    def __init__(self, *args, **kwargs):\n        \"\"\"Initialization of the base model\"\"\"\n        if kwargs:",
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "models.base_model",
        "description": "models.base_model",
        "peekOfCode": "Base = declarative_base()\nclass BaseModel:\n    \"\"\"The BaseModel class from which future classes will be derived\"\"\"\n    id = Column(String(60), primary_key=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    updated_at = Column(DateTime, default=datetime.utcnow)\n    def __init__(self, *args, **kwargs):\n        \"\"\"Initialization of the base model\"\"\"\n        if kwargs:\n            for key, value in kwargs.items():",
        "detail": "models.base_model",
        "documentation": {}
    },
    {
        "label": "Property",
        "kind": 6,
        "importPath": "models.property",
        "description": "models.property",
        "peekOfCode": "class Property(BaseModel, Base):\n    \"\"\"Representation of property \"\"\"\n    __tablename__ = 'properties'\n    gen_property_id = Column(String(60), nullable=False)\n    status = Column(String(20), nullable=False)\n    description = Column(String(255), nullable=False)\n    state = Column(String(128), nullable=False)\n    availability = Column(String(20), nullable=False)\n    landmark = Column(String(200), nullable=True)\n    search_term = Column(String(255), nullable=False)",
        "detail": "models.property",
        "documentation": {}
    },
    {
        "label": "Property_img",
        "kind": 6,
        "importPath": "models.property_img",
        "description": "models.property_img",
        "peekOfCode": "class Property_img(BaseModel, Base):\n    \"\"\"Representation of Property_img \"\"\"\n    __tablename__ = 'property_imgs'\n    img_path = Column(String(255), nullable=False)\n    property_id = Column(String(60), ForeignKey('properties.id'), nullable=False)\n    def __init__(self, *args, **kwargs):\n        \"\"\"initializes property_img\"\"\"\n        super().__init__(*args, **kwargs)",
        "detail": "models.property_img",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "models.review",
        "description": "models.review",
        "peekOfCode": "class Review(BaseModel, Base):\n    \"\"\"Representation of Review \"\"\"\n    __tablename__ = 'reviews'\n    rate = Column(Integer, nullable=False)\n    property_id = Column(String(60), ForeignKey('properties.id'), nullable=False)\n    text = Column(String(1024), nullable=False)\n    def __init__(self, *args, **kwargs):\n        \"\"\"initializes Review\"\"\"\n        super().__init__(*args, **kwargs)",
        "detail": "models.review",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "models.user",
        "description": "models.user",
        "peekOfCode": "class User(BaseModel, Base):\n    \"\"\"Representation of a user \"\"\"\n    __tablename__ = 'users'\n    email = Column(String(128), nullable=False)\n    password = Column(String(200), nullable=False)\n    firstname = Column(String(128), nullable=True)\n    lastname = Column(String(128), nullable=True)\n    gender = Column(String(10), nullable=False)\n    phone_no = Column(String(20), nullable=False)\n    properties = relationship(\"Property\",",
        "detail": "models.user",
        "documentation": {}
    }
]